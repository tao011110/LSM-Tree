        -:    0:Source:D:/mingw64/lib/gcc/x86_64-w64-mingw32/8.1.0/include/c++/bits/stl_construct.h
        -:    0:Graph:D:\PROGRAM_CPP\LSM-2\cmake-build-debug-coverage\CMakeFiles\LSM_2persistence.cc.dir\kvstore.cc.gcno
        -:    0:Data:D:\PROGRAM_CPP\LSM-2\cmake-build-debug-coverage\CMakeFiles\LSM_2persistence.cc.dir\kvstore.cc.gcda
        -:    0:Runs:1
        -:    0:Programs:1
        -:    1:// nonstandard construct and destroy functions -*- C++ -*-
        -:    2:
        -:    3:// Copyright (C) 2001-2018 Free Software Foundation, Inc.
        -:    4://
        -:    5:// This file is part of the GNU ISO C++ Library.  This library is free
        -:    6:// software; you can redistribute it and/or modify it under the
        -:    7:// terms of the GNU General Public License as published by the
        -:    8:// Free Software Foundation; either version 3, or (at your option)
        -:    9:// any later version.
        -:   10:
        -:   11:// This library is distributed in the hope that it will be useful,
        -:   12:// but WITHOUT ANY WARRANTY; without even the implied warranty of
        -:   13:// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
        -:   14:// GNU General Public License for more details.
        -:   15:
        -:   16:// Under Section 7 of GPL version 3, you are granted additional
        -:   17:// permissions described in the GCC Runtime Library Exception, version
        -:   18:// 3.1, as published by the Free Software Foundation.
        -:   19:
        -:   20:// You should have received a copy of the GNU General Public License and
        -:   21:// a copy of the GCC Runtime Library Exception along with this program;
        -:   22:// see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
        -:   23:// <http://www.gnu.org/licenses/>.
        -:   24:
        -:   25:/*
        -:   26: *
        -:   27: * Copyright (c) 1994
        -:   28: * Hewlett-Packard Company
        -:   29: *
        -:   30: * Permission to use, copy, modify, distribute and sell this software
        -:   31: * and its documentation for any purpose is hereby granted without fee,
        -:   32: * provided that the above copyright notice appear in all copies and
        -:   33: * that both that copyright notice and this permission notice appear
        -:   34: * in supporting documentation.  Hewlett-Packard Company makes no
        -:   35: * representations about the suitability of this software for any
        -:   36: * purpose.  It is provided "as is" without express or implied warranty.
        -:   37: *
        -:   38: *
        -:   39: * Copyright (c) 1996,1997
        -:   40: * Silicon Graphics Computer Systems, Inc.
        -:   41: *
        -:   42: * Permission to use, copy, modify, distribute and sell this software
        -:   43: * and its documentation for any purpose is hereby granted without fee,
        -:   44: * provided that the above copyright notice appear in all copies and
        -:   45: * that both that copyright notice and this permission notice appear
        -:   46: * in supporting documentation.  Silicon Graphics makes no
        -:   47: * representations about the suitability of this software for any
        -:   48: * purpose.  It is provided "as is" without express or implied warranty.
        -:   49: */
        -:   50:
        -:   51:/** @file bits/stl_construct.h
        -:   52: *  This is an internal header file, included by other library headers.
        -:   53: *  Do not attempt to use it directly. @headername{memory}
        -:   54: */
        -:   55:
        -:   56:#ifndef _STL_CONSTRUCT_H
        -:   57:#define _STL_CONSTRUCT_H 1
        -:   58:
        -:   59:#include <new>
        -:   60:#include <bits/move.h>
        -:   61:#include <ext/alloc_traits.h>
        -:   62:
        -:   63:namespace std _GLIBCXX_VISIBILITY(default)
        -:   64:{
        -:   65:_GLIBCXX_BEGIN_NAMESPACE_VERSION
        -:   66:
        -:   67:  /**
        -:   68:   * Constructs an object in existing memory by invoking an allocated
        -:   69:   * object's constructor with an initializer.
        -:   70:   */
        -:   71:#if __cplusplus >= 201103L
        -:   72:  template<typename _T1, typename... _Args>
        -:   73:    inline void
  657819*:   74:    _Construct(_T1* __p, _Args&&... __args)
  657819*:   75:    { ::new(static_cast<void*>(__p)) _T1(std::forward<_Args>(__args)...); }
------------------
_ZSt10_ConstructIN7KVStore4nodeEJS1_EEvPT_DpOT0_:
function _ZSt10_ConstructIN7KVStore4nodeEJS1_EEvPT_DpOT0_ called 0 returned 0% blocks executed 0%
    #####:   74:    _Construct(_T1* __p, _Args&&... __args)
    #####:   75:    { ::new(static_cast<void*>(__p)) _T1(std::forward<_Args>(__args)...); }
    %%%%%:   75-block  0
call    0 never executed
call    1 never executed
call    2 never executed
branch  3 never executed
branch  4 never executed
    %%%%%:   75-block  1
    $$$$$:   75-block  2
call    5 never executed
------------------
_ZSt10_ConstructIN8memTable8dataNodeEJS1_EEvPT_DpOT0_:
function _ZSt10_ConstructIN8memTable8dataNodeEJS1_EEvPT_DpOT0_ called 74595 returned 100% blocks executed 100%
    74595:   74:    _Construct(_T1* __p, _Args&&... __args)
    74595:   75:    { ::new(static_cast<void*>(__p)) _T1(std::forward<_Args>(__args)...); }
    74595:   75-block  0
call    0 returned 74595
call    1 returned 74595
call    2 returned 74595
------------------
_ZSt10_ConstructIN7KVStore4nodeEJRS1_EEvPT_DpOT0_:
function _ZSt10_ConstructIN7KVStore4nodeEJRS1_EEvPT_DpOT0_ called 109194 returned 100% blocks executed 83%
   109194:   74:    _Construct(_T1* __p, _Args&&... __args)
   109194:   75:    { ::new(static_cast<void*>(__p)) _T1(std::forward<_Args>(__args)...); }
   109194:   75-block  0
call    0 returned 109194
call    1 returned 109194
call    2 returned 109194
branch  3 taken 109194 (fallthrough)
branch  4 taken 0 (throw)
   109194:   75-block  1
    $$$$$:   75-block  2
call    5 never executed
------------------
_ZSt10_ConstructISt6vectorIN7KVStore4nodeESaIS2_EEJS4_EEvPT_DpOT0_:
function _ZSt10_ConstructISt6vectorIN7KVStore4nodeESaIS2_EEJS4_EEvPT_DpOT0_ called 150 returned 100% blocks executed 100%
      150:   74:    _Construct(_T1* __p, _Args&&... __args)
      150:   75:    { ::new(static_cast<void*>(__p)) _T1(std::forward<_Args>(__args)...); }
      150:   75-block  0
call    0 returned 150
call    1 returned 150
call    2 returned 150
------------------
_ZSt10_ConstructINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEJS5_EEvPT_DpOT0_:
function _ZSt10_ConstructINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEJS5_EEvPT_DpOT0_ called 2035 returned 100% blocks executed 100%
     2035:   74:    _Construct(_T1* __p, _Args&&... __args)
     2035:   75:    { ::new(static_cast<void*>(__p)) _T1(std::forward<_Args>(__args)...); }
     2035:   75-block  0
call    0 returned 2035
call    1 returned 2035
call    2 returned 2035
------------------
_ZSt10_ConstructISt6vectorIN7KVStore4nodeESaIS2_EEJRKS4_EEvPT_DpOT0_:
function _ZSt10_ConstructISt6vectorIN7KVStore4nodeESaIS2_EEJRKS4_EEvPT_DpOT0_ called 0 returned 0% blocks executed 0%
    #####:   74:    _Construct(_T1* __p, _Args&&... __args)
    #####:   75:    { ::new(static_cast<void*>(__p)) _T1(std::forward<_Args>(__args)...); }
    %%%%%:   75-block  0
call    0 never executed
call    1 never executed
call    2 never executed
branch  3 never executed
branch  4 never executed
    %%%%%:   75-block  1
    $$$$$:   75-block  2
call    5 never executed
------------------
_ZSt10_ConstructISt6vectorIN7KVStore4nodeESaIS2_EEJRS4_EEvPT_DpOT0_:
function _ZSt10_ConstructISt6vectorIN7KVStore4nodeESaIS2_EEJRS4_EEvPT_DpOT0_ called 113 returned 100% blocks executed 83%
      113:   74:    _Construct(_T1* __p, _Args&&... __args)
      113:   75:    { ::new(static_cast<void*>(__p)) _T1(std::forward<_Args>(__args)...); }
      113:   75-block  0
call    0 returned 113
call    1 returned 113
call    2 returned 113
branch  3 taken 113 (fallthrough)
branch  4 taken 0 (throw)
      113:   75-block  1
    $$$$$:   75-block  2
call    5 never executed
------------------
_ZSt10_ConstructIN7KVStore4nodeEJRKS1_EEvPT_DpOT0_:
function _ZSt10_ConstructIN7KVStore4nodeEJRKS1_EEvPT_DpOT0_ called 471732 returned 100% blocks executed 83%
   471732:   74:    _Construct(_T1* __p, _Args&&... __args)
   471732:   75:    { ::new(static_cast<void*>(__p)) _T1(std::forward<_Args>(__args)...); }
   471732:   75-block  0
call    0 returned 471732
call    1 returned 471732
call    2 returned 471732
branch  3 taken 471732 (fallthrough)
branch  4 taken 0 (throw)
   471732:   75-block  1
    $$$$$:   75-block  2
call    5 never executed
------------------
        -:   76:#else
        -:   77:  template<typename _T1, typename _T2>
        -:   78:    inline void
        -:   79:    _Construct(_T1* __p, const _T2& __value)
        -:   80:    {
        -:   81:      // _GLIBCXX_RESOLVE_LIB_DEFECTS
        -:   82:      // 402. wrong new expression in [some_]allocator::construct
        -:   83:      ::new(static_cast<void*>(__p)) _T1(__value);
        -:   84:    }
        -:   85:#endif
        -:   86:
        -:   87:  template<typename _T1>
        -:   88:    inline void
        -:   89:    _Construct_novalue(_T1* __p)
        -:   90:    { ::new(static_cast<void*>(__p)) _T1; }
        -:   91:
        -:   92:  /**
        -:   93:   * Destroy the object pointed to by a pointer type.
        -:   94:   */
        -:   95:  template<typename _Tp>
        -:   96:    inline void
   803062:   97:    _Destroy(_Tp* __pointer)
   803062:   98:    { __pointer->~_Tp(); }
------------------
_ZSt8_DestroyIN7KVStore4nodeEEvPT_:
function _ZSt8_DestroyIN7KVStore4nodeEEvPT_ called 668425 returned 100% blocks executed 100%
   668425:   97:    _Destroy(_Tp* __pointer)
   668425:   98:    { __pointer->~_Tp(); }
   668425:   98-block  0
call    0 returned 668425
------------------
_ZSt8_DestroyISt6vectorIN7KVStore4nodeESaIS2_EEEvPT_:
function _ZSt8_DestroyISt6vectorIN7KVStore4nodeESaIS2_EEEvPT_ called 263 returned 100% blocks executed 100%
      263:   97:    _Destroy(_Tp* __pointer)
      263:   98:    { __pointer->~_Tp(); }
      263:   98-block  0
call    0 returned 263
------------------
_ZSt8_DestroyIN8memTable8dataNodeEEvPT_:
function _ZSt8_DestroyIN8memTable8dataNodeEEvPT_ called 130432 returned 100% blocks executed 100%
   130432:   97:    _Destroy(_Tp* __pointer)
   130432:   98:    { __pointer->~_Tp(); }
   130432:   98-block  0
call    0 returned 130432
------------------
_ZSt8_DestroyINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvPT_:
function _ZSt8_DestroyINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvPT_ called 3942 returned 100% blocks executed 100%
     3942:   97:    _Destroy(_Tp* __pointer)
     3942:   98:    { __pointer->~_Tp(); }
     3942:   98-block  0
call    0 returned 3942
------------------
        -:   99:
        -:  100:  template<bool>
        -:  101:    struct _Destroy_aux
        -:  102:    {
        -:  103:      template<typename _ForwardIterator>
        -:  104:        static void
  810989*:  105:        __destroy(_ForwardIterator __first, _ForwardIterator __last)
        -:  106:	{
  810989*:  107:	  for (; __first != __last; ++__first)
  803062*:  108:	    std::_Destroy(std::__addressof(*__first));
    7927*:  109:	}
------------------
_ZNSt12_Destroy_auxILb0EE9__destroyIN9__gnu_cxx17__normal_iteratorIPN7KVStore4nodeESt6vectorIS5_SaIS5_EEEEEEvT_SB_:
function _ZNSt12_Destroy_auxILb0EE9__destroyIN9__gnu_cxx17__normal_iteratorIPN7KVStore4nodeESt6vectorIS5_SaIS5_EEEEEEvT_SB_ called 0 returned 0% blocks executed 0%
    #####:  105:        __destroy(_ForwardIterator __first, _ForwardIterator __last)
        -:  106:	{
    #####:  107:	  for (; __first != __last; ++__first)
    %%%%%:  107-block  0
call    0 never executed
branch  1 never executed
branch  2 never executed
call    3 never executed
    #####:  108:	    std::_Destroy(std::__addressof(*__first));
    %%%%%:  108-block  0
call    0 never executed
call    1 never executed
call    2 never executed
    #####:  109:	}
------------------
_ZNSt12_Destroy_auxILb0EE9__destroyIN9__gnu_cxx17__normal_iteratorIPSt6vectorIN7KVStore4nodeESaIS6_EES4_IS8_SaIS8_EEEEEEvT_SD_:
function _ZNSt12_Destroy_auxILb0EE9__destroyIN9__gnu_cxx17__normal_iteratorIPSt6vectorIN7KVStore4nodeESaIS6_EES4_IS8_SaIS8_EEEEEEvT_SD_ called 0 returned 0% blocks executed 0%
    #####:  105:        __destroy(_ForwardIterator __first, _ForwardIterator __last)
        -:  106:	{
    #####:  107:	  for (; __first != __last; ++__first)
    %%%%%:  107-block  0
call    0 never executed
branch  1 never executed
branch  2 never executed
call    3 never executed
    #####:  108:	    std::_Destroy(std::__addressof(*__first));
    %%%%%:  108-block  0
call    0 never executed
call    1 never executed
call    2 never executed
    #####:  109:	}
------------------
_ZNSt12_Destroy_auxILb0EE9__destroyIPN7KVStore4nodeEEEvT_S5_:
function _ZNSt12_Destroy_auxILb0EE9__destroyIPN7KVStore4nodeEEEvT_S5_ called 3455 returned 100% blocks executed 100%
   671880:  105:        __destroy(_ForwardIterator __first, _ForwardIterator __last)
        -:  106:	{
   671880:  107:	  for (; __first != __last; ++__first)
   671880:  107-block  0
branch  0 taken 668425 (fallthrough)
branch  1 taken 3455
   668425:  108:	    std::_Destroy(std::__addressof(*__first));
   668425:  108-block  0
call    0 returned 668425
call    1 returned 668425
     3455:  109:	}
------------------
_ZNSt12_Destroy_auxILb0EE9__destroyIPSt6vectorIN7KVStore4nodeESaIS4_EEEEvT_S8_:
function _ZNSt12_Destroy_auxILb0EE9__destroyIPSt6vectorIN7KVStore4nodeESaIS4_EEEEvT_S8_ called 458 returned 100% blocks executed 100%
      721:  105:        __destroy(_ForwardIterator __first, _ForwardIterator __last)
        -:  106:	{
      721:  107:	  for (; __first != __last; ++__first)
      721:  107-block  0
branch  0 taken 263 (fallthrough)
branch  1 taken 458
      263:  108:	    std::_Destroy(std::__addressof(*__first));
      263:  108-block  0
call    0 returned 263
call    1 returned 263
      458:  109:	}
------------------
_ZNSt12_Destroy_auxILb0EE9__destroyIPN8memTable8dataNodeEEEvT_S5_:
function _ZNSt12_Destroy_auxILb0EE9__destroyIPN8memTable8dataNodeEEEvT_S5_ called 2140 returned 100% blocks executed 100%
   132572:  105:        __destroy(_ForwardIterator __first, _ForwardIterator __last)
        -:  106:	{
   132572:  107:	  for (; __first != __last; ++__first)
   132572:  107-block  0
branch  0 taken 130432 (fallthrough)
branch  1 taken 2140
   130432:  108:	    std::_Destroy(std::__addressof(*__first));
   130432:  108-block  0
call    0 returned 130432
call    1 returned 130432
     2140:  109:	}
------------------
_ZNSt12_Destroy_auxILb0EE9__destroyIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEvT_S9_:
function _ZNSt12_Destroy_auxILb0EE9__destroyIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEvT_S9_ called 1874 returned 100% blocks executed 100%
     5816:  105:        __destroy(_ForwardIterator __first, _ForwardIterator __last)
        -:  106:	{
     5816:  107:	  for (; __first != __last; ++__first)
     5816:  107-block  0
branch  0 taken 3942 (fallthrough)
branch  1 taken 1874
     3942:  108:	    std::_Destroy(std::__addressof(*__first));
     3942:  108-block  0
call    0 returned 3942
call    1 returned 3942
     1874:  109:	}
------------------
        -:  110:    };
        -:  111:
        -:  112:  template<>
        -:  113:    struct _Destroy_aux<true>
        -:  114:    {
        -:  115:      template<typename _ForwardIterator>
        -:  116:        static void
     201*:  117:        __destroy(_ForwardIterator, _ForwardIterator) { }
------------------
_ZNSt12_Destroy_auxILb1EE9__destroyIPPN5Cache4NodeEEEvT_S6_:
function _ZNSt12_Destroy_auxILb1EE9__destroyIPPN5Cache4NodeEEEvT_S6_ called 0 returned 0% blocks executed 0%
    #####:  117:        __destroy(_ForwardIterator, _ForwardIterator) { }
------------------
_ZNSt12_Destroy_auxILb1EE9__destroyIPiEEvT_S3_:
function _ZNSt12_Destroy_auxILb1EE9__destroyIPiEEvT_S3_ called 201 returned 100% blocks executed 100%
      201:  117:        __destroy(_ForwardIterator, _ForwardIterator) { }
------------------
        -:  118:    };
        -:  119:
        -:  120:  /**
        -:  121:   * Destroy a range of objects.  If the value_type of the object has
        -:  122:   * a trivial destructor, the compiler should optimize all of this
        -:  123:   * away, otherwise the objects' destructors must be invoked.
        -:  124:   */
        -:  125:  template<typename _ForwardIterator>
        -:  126:    inline void
    8128*:  127:    _Destroy(_ForwardIterator __first, _ForwardIterator __last)
        -:  128:    {
        -:  129:      typedef typename iterator_traits<_ForwardIterator>::value_type
        -:  130:                       _Value_type;
        -:  131:#if __cplusplus >= 201103L
        -:  132:      // A deleted destructor is trivial, this ensures we reject such types:
        -:  133:      static_assert(is_destructible<_Value_type>::value,
        -:  134:		    "value type is destructible");
        -:  135:#endif
        -:  136:      std::_Destroy_aux<__has_trivial_destructor(_Value_type)>::
    8128*:  137:	__destroy(__first, __last);
    8128*:  138:    }
------------------
_ZSt8_DestroyIN9__gnu_cxx17__normal_iteratorIPN7KVStore4nodeESt6vectorIS3_SaIS3_EEEEEvT_S9_:
function _ZSt8_DestroyIN9__gnu_cxx17__normal_iteratorIPN7KVStore4nodeESt6vectorIS3_SaIS3_EEEEEvT_S9_ called 0 returned 0% blocks executed 0%
    #####:  127:    _Destroy(_ForwardIterator __first, _ForwardIterator __last)
        -:  128:    {
        -:  129:      typedef typename iterator_traits<_ForwardIterator>::value_type
        -:  130:                       _Value_type;
        -:  131:#if __cplusplus >= 201103L
        -:  132:      // A deleted destructor is trivial, this ensures we reject such types:
        -:  133:      static_assert(is_destructible<_Value_type>::value,
        -:  134:		    "value type is destructible");
        -:  135:#endif
        -:  136:      std::_Destroy_aux<__has_trivial_destructor(_Value_type)>::
    #####:  137:	__destroy(__first, __last);
    %%%%%:  137-block  0
call    0 never executed
    #####:  138:    }
------------------
_ZSt8_DestroyIN9__gnu_cxx17__normal_iteratorIPSt6vectorIN7KVStore4nodeESaIS4_EES2_IS6_SaIS6_EEEEEvT_SB_:
function _ZSt8_DestroyIN9__gnu_cxx17__normal_iteratorIPSt6vectorIN7KVStore4nodeESaIS4_EES2_IS6_SaIS6_EEEEEvT_SB_ called 0 returned 0% blocks executed 0%
    #####:  127:    _Destroy(_ForwardIterator __first, _ForwardIterator __last)
        -:  128:    {
        -:  129:      typedef typename iterator_traits<_ForwardIterator>::value_type
        -:  130:                       _Value_type;
        -:  131:#if __cplusplus >= 201103L
        -:  132:      // A deleted destructor is trivial, this ensures we reject such types:
        -:  133:      static_assert(is_destructible<_Value_type>::value,
        -:  134:		    "value type is destructible");
        -:  135:#endif
        -:  136:      std::_Destroy_aux<__has_trivial_destructor(_Value_type)>::
    #####:  137:	__destroy(__first, __last);
    %%%%%:  137-block  0
call    0 never executed
    #####:  138:    }
------------------
_ZSt8_DestroyIPN7KVStore4nodeEEvT_S3_:
function _ZSt8_DestroyIPN7KVStore4nodeEEvT_S3_ called 3455 returned 100% blocks executed 100%
     3455:  127:    _Destroy(_ForwardIterator __first, _ForwardIterator __last)
        -:  128:    {
        -:  129:      typedef typename iterator_traits<_ForwardIterator>::value_type
        -:  130:                       _Value_type;
        -:  131:#if __cplusplus >= 201103L
        -:  132:      // A deleted destructor is trivial, this ensures we reject such types:
        -:  133:      static_assert(is_destructible<_Value_type>::value,
        -:  134:		    "value type is destructible");
        -:  135:#endif
        -:  136:      std::_Destroy_aux<__has_trivial_destructor(_Value_type)>::
     3455:  137:	__destroy(__first, __last);
     3455:  137-block  0
call    0 returned 3455
     3455:  138:    }
------------------
_ZSt8_DestroyIPSt6vectorIN7KVStore4nodeESaIS2_EEEvT_S6_:
function _ZSt8_DestroyIPSt6vectorIN7KVStore4nodeESaIS2_EEEvT_S6_ called 458 returned 100% blocks executed 100%
      458:  127:    _Destroy(_ForwardIterator __first, _ForwardIterator __last)
        -:  128:    {
        -:  129:      typedef typename iterator_traits<_ForwardIterator>::value_type
        -:  130:                       _Value_type;
        -:  131:#if __cplusplus >= 201103L
        -:  132:      // A deleted destructor is trivial, this ensures we reject such types:
        -:  133:      static_assert(is_destructible<_Value_type>::value,
        -:  134:		    "value type is destructible");
        -:  135:#endif
        -:  136:      std::_Destroy_aux<__has_trivial_destructor(_Value_type)>::
      458:  137:	__destroy(__first, __last);
      458:  137-block  0
call    0 returned 458
      458:  138:    }
------------------
_ZSt8_DestroyIPPN5Cache4NodeEEvT_S4_:
function _ZSt8_DestroyIPPN5Cache4NodeEEvT_S4_ called 0 returned 0% blocks executed 0%
    #####:  127:    _Destroy(_ForwardIterator __first, _ForwardIterator __last)
        -:  128:    {
        -:  129:      typedef typename iterator_traits<_ForwardIterator>::value_type
        -:  130:                       _Value_type;
        -:  131:#if __cplusplus >= 201103L
        -:  132:      // A deleted destructor is trivial, this ensures we reject such types:
        -:  133:      static_assert(is_destructible<_Value_type>::value,
        -:  134:		    "value type is destructible");
        -:  135:#endif
        -:  136:      std::_Destroy_aux<__has_trivial_destructor(_Value_type)>::
    #####:  137:	__destroy(__first, __last);
    %%%%%:  137-block  0
call    0 never executed
    #####:  138:    }
------------------
_ZSt8_DestroyIPiEvT_S1_:
function _ZSt8_DestroyIPiEvT_S1_ called 201 returned 100% blocks executed 100%
      201:  127:    _Destroy(_ForwardIterator __first, _ForwardIterator __last)
        -:  128:    {
        -:  129:      typedef typename iterator_traits<_ForwardIterator>::value_type
        -:  130:                       _Value_type;
        -:  131:#if __cplusplus >= 201103L
        -:  132:      // A deleted destructor is trivial, this ensures we reject such types:
        -:  133:      static_assert(is_destructible<_Value_type>::value,
        -:  134:		    "value type is destructible");
        -:  135:#endif
        -:  136:      std::_Destroy_aux<__has_trivial_destructor(_Value_type)>::
      201:  137:	__destroy(__first, __last);
      201:  137-block  0
call    0 returned 201
      201:  138:    }
------------------
_ZSt8_DestroyIPN8memTable8dataNodeEEvT_S3_:
function _ZSt8_DestroyIPN8memTable8dataNodeEEvT_S3_ called 2140 returned 100% blocks executed 100%
     2140:  127:    _Destroy(_ForwardIterator __first, _ForwardIterator __last)
        -:  128:    {
        -:  129:      typedef typename iterator_traits<_ForwardIterator>::value_type
        -:  130:                       _Value_type;
        -:  131:#if __cplusplus >= 201103L
        -:  132:      // A deleted destructor is trivial, this ensures we reject such types:
        -:  133:      static_assert(is_destructible<_Value_type>::value,
        -:  134:		    "value type is destructible");
        -:  135:#endif
        -:  136:      std::_Destroy_aux<__has_trivial_destructor(_Value_type)>::
     2140:  137:	__destroy(__first, __last);
     2140:  137-block  0
call    0 returned 2140
     2140:  138:    }
------------------
_ZSt8_DestroyIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvT_S7_:
function _ZSt8_DestroyIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvT_S7_ called 1874 returned 100% blocks executed 100%
     1874:  127:    _Destroy(_ForwardIterator __first, _ForwardIterator __last)
        -:  128:    {
        -:  129:      typedef typename iterator_traits<_ForwardIterator>::value_type
        -:  130:                       _Value_type;
        -:  131:#if __cplusplus >= 201103L
        -:  132:      // A deleted destructor is trivial, this ensures we reject such types:
        -:  133:      static_assert(is_destructible<_Value_type>::value,
        -:  134:		    "value type is destructible");
        -:  135:#endif
        -:  136:      std::_Destroy_aux<__has_trivial_destructor(_Value_type)>::
     1874:  137:	__destroy(__first, __last);
     1874:  137-block  0
call    0 returned 1874
     1874:  138:    }
------------------
        -:  139:
        -:  140:  template<bool>
        -:  141:    struct _Destroy_n_aux
        -:  142:    {
        -:  143:      template<typename _ForwardIterator, typename _Size>
        -:  144:        static _ForwardIterator
        -:  145:        __destroy_n(_ForwardIterator __first, _Size __count)
        -:  146:	{
        -:  147:	  for (; __count > 0; (void)++__first, --__count)
        -:  148:	    std::_Destroy(std::__addressof(*__first));
        -:  149:	  return __first;
        -:  150:	}
        -:  151:    };
        -:  152:
        -:  153:  template<>
        -:  154:    struct _Destroy_n_aux<true>
        -:  155:    {
        -:  156:      template<typename _ForwardIterator, typename _Size>
        -:  157:        static _ForwardIterator
        -:  158:        __destroy_n(_ForwardIterator __first, _Size __count)
        -:  159:	{
        -:  160:	  std::advance(__first, __count);
        -:  161:	  return __first;
        -:  162:	}
        -:  163:    };
        -:  164:
        -:  165:  /**
        -:  166:   * Destroy a range of objects.  If the value_type of the object has
        -:  167:   * a trivial destructor, the compiler should optimize all of this
        -:  168:   * away, otherwise the objects' destructors must be invoked.
        -:  169:   */
        -:  170:  template<typename _ForwardIterator, typename _Size>
        -:  171:    inline _ForwardIterator
        -:  172:    _Destroy_n(_ForwardIterator __first, _Size __count)
        -:  173:    {
        -:  174:      typedef typename iterator_traits<_ForwardIterator>::value_type
        -:  175:                       _Value_type;
        -:  176:#if __cplusplus >= 201103L
        -:  177:      // A deleted destructor is trivial, this ensures we reject such types:
        -:  178:      static_assert(is_destructible<_Value_type>::value,
        -:  179:		    "value type is destructible");
        -:  180:#endif
        -:  181:      return std::_Destroy_n_aux<__has_trivial_destructor(_Value_type)>::
        -:  182:	__destroy_n(__first, __count);
        -:  183:    }
        -:  184:
        -:  185:  /**
        -:  186:   * Destroy a range of objects using the supplied allocator.  For
        -:  187:   * nondefault allocators we do not optimize away invocation of 
        -:  188:   * destroy() even if _Tp has a trivial destructor.
        -:  189:   */
        -:  190:
        -:  191:  template<typename _ForwardIterator, typename _Allocator>
        -:  192:    void
        -:  193:    _Destroy(_ForwardIterator __first, _ForwardIterator __last,
        -:  194:	     _Allocator& __alloc)
        -:  195:    {
        -:  196:      typedef __gnu_cxx::__alloc_traits<_Allocator> __traits;
        -:  197:      for (; __first != __last; ++__first)
        -:  198:	__traits::destroy(__alloc, std::__addressof(*__first));
        -:  199:    }
        -:  200:
        -:  201:  template<typename _ForwardIterator, typename _Tp>
        -:  202:    inline void
    8128*:  203:    _Destroy(_ForwardIterator __first, _ForwardIterator __last,
        -:  204:	     allocator<_Tp>&)
        -:  205:    {
    8128*:  206:      _Destroy(__first, __last);
    8128*:  207:    }
------------------
_ZSt8_DestroyIN9__gnu_cxx17__normal_iteratorIPN7KVStore4nodeESt6vectorIS3_SaIS3_EEEES3_EvT_S9_RSaIT0_E:
function _ZSt8_DestroyIN9__gnu_cxx17__normal_iteratorIPN7KVStore4nodeESt6vectorIS3_SaIS3_EEEES3_EvT_S9_RSaIT0_E called 0 returned 0% blocks executed 0%
    #####:  203:    _Destroy(_ForwardIterator __first, _ForwardIterator __last,
        -:  204:	     allocator<_Tp>&)
        -:  205:    {
    #####:  206:      _Destroy(__first, __last);
    %%%%%:  206-block  0
call    0 never executed
    #####:  207:    }
------------------
_ZSt8_DestroyIN9__gnu_cxx17__normal_iteratorIPSt6vectorIN7KVStore4nodeESaIS4_EES2_IS6_SaIS6_EEEES6_EvT_SB_RSaIT0_E:
function _ZSt8_DestroyIN9__gnu_cxx17__normal_iteratorIPSt6vectorIN7KVStore4nodeESaIS4_EES2_IS6_SaIS6_EEEES6_EvT_SB_RSaIT0_E called 0 returned 0% blocks executed 0%
    #####:  203:    _Destroy(_ForwardIterator __first, _ForwardIterator __last,
        -:  204:	     allocator<_Tp>&)
        -:  205:    {
    #####:  206:      _Destroy(__first, __last);
    %%%%%:  206-block  0
call    0 never executed
    #####:  207:    }
------------------
_ZSt8_DestroyIPN7KVStore4nodeES1_EvT_S3_RSaIT0_E:
function _ZSt8_DestroyIPN7KVStore4nodeES1_EvT_S3_RSaIT0_E called 3455 returned 100% blocks executed 100%
     3455:  203:    _Destroy(_ForwardIterator __first, _ForwardIterator __last,
        -:  204:	     allocator<_Tp>&)
        -:  205:    {
     3455:  206:      _Destroy(__first, __last);
     3455:  206-block  0
call    0 returned 3455
     3455:  207:    }
------------------
_ZSt8_DestroyIPSt6vectorIN7KVStore4nodeESaIS2_EES4_EvT_S6_RSaIT0_E:
function _ZSt8_DestroyIPSt6vectorIN7KVStore4nodeESaIS2_EES4_EvT_S6_RSaIT0_E called 458 returned 100% blocks executed 100%
      458:  203:    _Destroy(_ForwardIterator __first, _ForwardIterator __last,
        -:  204:	     allocator<_Tp>&)
        -:  205:    {
      458:  206:      _Destroy(__first, __last);
      458:  206-block  0
call    0 returned 458
      458:  207:    }
------------------
_ZSt8_DestroyIPPN5Cache4NodeES2_EvT_S4_RSaIT0_E:
function _ZSt8_DestroyIPPN5Cache4NodeES2_EvT_S4_RSaIT0_E called 0 returned 0% blocks executed 0%
    #####:  203:    _Destroy(_ForwardIterator __first, _ForwardIterator __last,
        -:  204:	     allocator<_Tp>&)
        -:  205:    {
    #####:  206:      _Destroy(__first, __last);
    %%%%%:  206-block  0
call    0 never executed
    #####:  207:    }
------------------
_ZSt8_DestroyIPiiEvT_S1_RSaIT0_E:
function _ZSt8_DestroyIPiiEvT_S1_RSaIT0_E called 201 returned 100% blocks executed 100%
      201:  203:    _Destroy(_ForwardIterator __first, _ForwardIterator __last,
        -:  204:	     allocator<_Tp>&)
        -:  205:    {
      201:  206:      _Destroy(__first, __last);
      201:  206-block  0
call    0 returned 201
      201:  207:    }
------------------
_ZSt8_DestroyIPN8memTable8dataNodeES1_EvT_S3_RSaIT0_E:
function _ZSt8_DestroyIPN8memTable8dataNodeES1_EvT_S3_RSaIT0_E called 2140 returned 100% blocks executed 100%
     2140:  203:    _Destroy(_ForwardIterator __first, _ForwardIterator __last,
        -:  204:	     allocator<_Tp>&)
        -:  205:    {
     2140:  206:      _Destroy(__first, __last);
     2140:  206-block  0
call    0 returned 2140
     2140:  207:    }
------------------
_ZSt8_DestroyIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_EvT_S7_RSaIT0_E:
function _ZSt8_DestroyIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_EvT_S7_RSaIT0_E called 1874 returned 100% blocks executed 100%
     1874:  203:    _Destroy(_ForwardIterator __first, _ForwardIterator __last,
        -:  204:	     allocator<_Tp>&)
        -:  205:    {
     1874:  206:      _Destroy(__first, __last);
     1874:  206-block  0
call    0 returned 1874
     1874:  207:    }
------------------
        -:  208:
        -:  209:#if __cplusplus > 201402L
        -:  210:  template <typename _Tp>
        -:  211:    inline void
        -:  212:    destroy_at(_Tp* __location)
        -:  213:    {
        -:  214:      std::_Destroy(__location);
        -:  215:    }
        -:  216:
        -:  217:  template <typename _ForwardIterator>
        -:  218:    inline void
        -:  219:    destroy(_ForwardIterator __first, _ForwardIterator __last)
        -:  220:    {
        -:  221:      std::_Destroy(__first, __last);
        -:  222:    }
        -:  223:
        -:  224:  template <typename _ForwardIterator, typename _Size>
        -:  225:    inline _ForwardIterator
        -:  226:    destroy_n(_ForwardIterator __first, _Size __count)
        -:  227:    {
        -:  228:      return std::_Destroy_n(__first, __count);
        -:  229:    }
        -:  230:#endif
        -:  231:
        -:  232:_GLIBCXX_END_NAMESPACE_VERSION
        -:  233:} // namespace std
        -:  234:
        -:  235:#endif /* _STL_CONSTRUCT_H */
        -:  236:
